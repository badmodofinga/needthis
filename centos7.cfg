# ########################################################################### ##
## Inspired by:
# http://usgcb.nist.gov/usgcb/content/configuration/workstation-ks.cfg
# http://fedoraproject.org/wiki/Anaconda/Kickstart#Chapter_4._Pre-installation_Script
# http://wiki.centos.org/TipsAndTricks/KickStart
# ftp://partners.redhat.com/a166eabc5cf5df158922f9b06e5e7b21/hwcert/kickstarts/rhel7.0-x86_64-client-20140416.cfg
## ########################################################################## ##
install
auth --enableshadow --passalgo=sha512
firstboot --disable

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

cmdline

## Install Source
url --url http://lib-css1log-v01/centos/7/os/x86_64

#%include /tmp/network.ks

## encrypt root password
#openssl passwd -1 "APassword"
#localuser:Password1234
#user --name=localuser --groups=wheel --password=$1$sD42nOoq$BtYNIyoKH16PVCwPLA0Dx1 --iscrypted
# Default kickstart only OSUL root password
rootpw --iscrypted $1$VGb1kFpN$gdJ5YonIUMmQVr551rAHY.
timezone America/New_York --isUtc
bootloader --location=mbr

## Partitioning
zerombr
clearpart --all --initlabel
part /boot --fstype "xfs" --size=512 --asprimary
part pv.01 --size=1 --grow
volgroup vg00 pv.01
#/tmp /var/tmp /mnt are added in the %post section
logvol /     --fstype "xfs" --name=lv_root --vgname=vg00 --size=5120
logvol /home --fstype "xfs" --name=lv_home --vgname=vg00 --size=512 --fsoptions="nodev"
logvol /opt  --fstype "xfs" --name=lv_opt  --vgname=vg00 --size=3072 --fsoptions="nodev"
logvol /var  --fstype "xfs" --name=lv_var  --vgname=vg00 --size=5120 --fsoptions="nodev"
logvol /var/log --fstype "xfs" --name=lv_varlog --vgname=vg00 --size=1024 --fsoptions="nodev,noexec,nosuid"
logvol /var/log/audit --fstype "xfs" --name=lv_varlogaudit --vgname=vg00 --size=256 --fsoptions="nodev,noexec,nosuid"
logvol swap  --fstype "swap" --name=lv_swap --vgname=vg00 --recommended

## Minimal Install
%packages --nobase
@core --nodefaults
-aic94xx-firmware*
-alsa-*
-biosdevname
-btrfs-progs*
-dracut-network
-iprutils
-ivtv*
-iwl*firmware
-libertas*
-kexec-tools
-postfix
-plymouth*
%end

############################# pre ########################
%pre --interpreter=/bin/bash
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt 6
clear
echo -n "Hostname: "
read HOSTNAME
if $HOSTNAME == ""; then
  HOSTNAME = "lib-localhost"
fi

#HOSTLINE="network --bootproto=dhcp --hostname=$HOSTNAME --ipv6=off"
echo $HOSTNAME > /tmp/network.ks
chvt 1
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1

%end

############################# post #######################

%post --nochroot
HOSTNAME=$(cat /tmp/network.ks)
hostnamectl set-hostname $HOSTNAME.lib.ohio-state.edu
hostnamectl --pretty set-hostname $HOSTNAME.lib.ohio-state.edu
cp /etc/hostname /mnt/sysimage/etc/hostname
cp /etc/machine-info /mnt/sysimage/etc/machine-info
%end

%post --log=/root/ks-post.log --interpreter=/bin/bash
## redirect std out & std err to log

HOSTNAME=$(cat /tmp/network.ks)
SOURCE=http://lib-css1log-v01

exec >/root/ks-post.log 2>&1
## print log onto 7th tty
tail -f /root/ks-post.log > /dev/tty7 &
## switch to 7th tty
#/usr/bin/chvt 7
echo "Console switched to show %post output"
set -x
## Set time
## install chrony
yum -y install chrony wget
mv /etc/chrony.conf /etc/chrony.conf.dist
wget -O /etc/chrony.conf $SOURCE/configs/chrony.conf
systemctl enable chronyd.service
systemctl start chronyd.service
chronyc waitsync
timedatectl set-ntp yes
BEGIN=`date +%Y%m%d-%H%M%S`
## set hwclock to system time
hwclock --systohc

#HOSTNAME=`grep HOSTNAME /etc/sysconfig/network | sed 's/^HOSTNAME=//g'`
hostnamectl set-hostname $HOSTNAME.lib.ohio-state.edu

## Install Packages
# Additional repositories
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.dist
curl $SOURCE/configs/CentOS7-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
yum -y install $SOURCE/binaries/epel-release-7-5.noarch.rpm
yum -y install http://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm

# Mainline packages
yum -y install autofs bash-completion bind-utils bzip2 deltarpm \
logwatch mailx mlocate nfs-utils open-vm-tools rsync screen telnet \
yum-plugin-security
# AD Auth
yum -y install authconfig dbus krb5-workstation libarchive oddjob \
oddjob-mkhomedir pam_krb5 realmd samba-common samba-common-tools sssd-ad sssd
# 3rd Party packages
yum -y install nagios-plugins-disk nagios-plugins-load nagios-plugins-swap \
nagios-plugins-procs nagios-plugins-users nrpe puppet ssmtp

# start puppet on boot
systemctl enable puppet.service
/opt/puppetlabs/bin/puppet agent --test

## Logrotate
# keep 12 weeks
sed -i 's/^rotate 4/rotate 12/' /etc/logrotate.conf
# compress logs
sed -i 's/^#\s*\(compress\)/\1/' /etc/logrotate.conf

## Nagios Client (nrpe)
# Yum Plugin
wget https://raw.githubusercontent.com/calestyo/check_yum/master/check_yum -O /usr/lib64/nagios/plugins/check_yum
chmod 755 /usr/lib64/nagios/plugins/check_yum
#mv /etc/nagios/nrpe.cfg /etc/nagios/nrpe.cfg.dist
wget $SOURCE/configs/nrpe_OSUL.cfg -O /etc/nrpe.d/AA_OSUL.cfg
systemctl enable nrpe.service
wget -O /tmp/check_yum.pp $SOURCE/selinux-modules/check_yum.pp
wget -O /tmp/check_disk.pp $SOURCE/selinux-modules/check_disk.pp
semodule -i /tmp/check_yum.pp
semodule -i /tmp/check_disk.pp
touch /.autorelabel

## Firewall - firewalld
wget -O /etc/firewalld/services/nrpe.xml $SOURCE/firewalld/nrpe.xml
firewall-offline-cmd  --remove-service=ssh
firewall-offline-cmd  --remove-service=mdns
firewall-offline-cmd  --remove-service=samba-client
firewall-offline-cmd  --remove-service=ipp-client
firewall-offline-cmd  --zone=trusted --add-source=10.10.10.0/24
firewall-offline-cmd  --zone=trusted --add-source=10.11.11.0/24
firewall-offline-cmd  --zone=trusted --add-service=ssh
firewall-offline-cmd  --zone=internal --add-source=10.0.0.0/24
firewall-offline-cmd  --zone=internal --add-source=10.1.1.0/24
firewall-offline-cmd  --zone=internal --add-rich-rule='rule family="ipv4" source address="10.1.1.165/32" service name="nrpe" accept'
firewall-offline-cmd  --zone=internal --add-rich-rule='rule family="ipv4" source address="10.0.0.165/32" service name="nrpe" accept'
firewall-offline-cmd  --zone=dmz --add-source=140.254.87.128/26
firewall-offline-cmd  --zone=dmz --add-source=140.254.31.0/26

## Splunk
yum -y localinstall $SOURCE/binaries/splunkforwarder.rpm
/opt/splunkforwarder/bin/splunk start --accept-license --seed-passwd mXwI4MAXduTjnjrumFDL
/opt/splunkforwarder/bin/splunk enable boot-start
/opt/splunkforwarder/bin/splunk add forward-server lib-css1log-v01.lib.ohio-state.edu:9997 -auth admin:mXwI4MAXduTjnjrumFDL
/opt/splunkforwarder/bin/splunk add monitor /etc
/opt/splunkforwarder/bin/splunk add monitor /var/log

for i in $(ls /sys/class/net/); do
  if [ $i != "lo" ]; then
    nmcli connection modify $i ipv6.method ignore
    nmcli connection modify $i ipv6.ignore-auto-routes yes
    nmcli connection modify $i ipv6.ignore-auto-dns yes
  fi
done

## screen caption
sed -i 's/^#\s*\(caption\salways\s\"\%{wk}\%\?\%.*\)/\1/' /etc/screenrc

## Fix for  https://bugzilla.redhat.com/show_bug.cgi?id=717770
echo "options single-request-reopen" >> /etc/resolv.conf

## allow 'adsadmin' members to sudo
echo "%libadmin	ALL=(ALL)	ALL" > /etc/sudoers.d/libadmin

## Mail
# Forward mail through LIB-CSS1MAI-V01.lib.ohio-state.edu
# ssmtp
wget -O /etc/ssmtp/ssmtp.conf $SOURCE/configs/ssmtp.conf

## SSH
# Disable root from using ssh
#sed -i 's/^#PermitRootLogin\syes/PermitRootLogin no/' /etc/ssh/sshd_config

## Update all packages
yum -y update

## WIT/ADS Administrators
if [ `echo $HOSTNAME|cut -c 5-7` = wit ]; then
	# sudoers
	echo "%adsadmin	ALL=(ALL)	ALL" > /etc/sudoers.d/adsadmin
	# SSH
	sed -i "/^ad_access_filter/c\ad_access_filter=(|(memberOf=CN=libadmin,OU=CSS,OU=Information Technology,OU=University Libraries,OU=The Ohio State University,DC=ad,DC=service,DC=osu,DC=edu)(memberOf=CN=adsadmin,OU=WIT,OU=Information Technology,OU=University Libraries,OU=The Ohio State University,DC=ad,DC=service,DC=osu,DC=edu)" /etc/sssd/sssd.conf
fi

## Boot loud
sed -i 's/rhgb quiet//' /boot/grub2/grub.cfg

/usr/sbin/authconfig \
--update \
--kickstart \
--enablelocauthorize \
--enablepamaccess \
--enablemkhomedir \
--enablesssd \
--enablesssdauth \
--disableldap \
--disableldapauth \

# Add OSU CA to certificate list
wget -O /etc/pki/tls/certs/ca-OSUAD.pem $SOURCE/certs/ca-OSUAD.pem
ln -s /etc/pki/tls/certs/ca-OSUAD.pem /etc/pki/tls/certs/`openssl x509 \
-hash -noout -in /etc/pki/tls/certs/ca-OSUAD.pem`.0
## Grab a script instead
wget -O /root/adBind.sh $SOURCE/scripts/adBind.sh
wget -O /etc/krb5.conf $SOURCE/configs/krb5.conf
chmod +x /root/adBind.sh

## TMPMNT Create /tmp and /mnt after the initial lv creation TMPMNT
lvcreate --name vartmp --size 512 vg00
mkfs.xfs /dev/vg00/vartmp
echo -e '/dev/mapper/vg00-vartmp\t/var/tmp\txfs\tdefaults\t0 0' >> /etc/fstab
lvcreate --name tmp --size 512 vg00
mkfs.xfs /dev/vg00/tmp
echo -e '/dev/mapper/vg00-tmp\t/tmp\txfs\tdefaults\t0 0' >> /etc/fstab
lvcreate --name mnt --size 64 vg00
mkfs.xfs /dev/vg00/mnt
echo -e '/dev/mapper/vg00-mnt\t/mnt\txfs\tnodev,nosuid,noexec\t0 0' >> /etc/fstab

echo "########## begin $BEGIN ##########" >> /root/ks-post.log
echo "##########   end $(date +%Y%m%d-%H%M%S) ##########" >> /root/ks-post.log

## Email log
# Convert to Windows friendly encoding
#sed -i 's/$'"/`echo \\\r`/" /root/ks-post.log
mailx -s "$HOSTNAME installed" libinfrastructure@osu.edu < /root/ks-post.log
%end
